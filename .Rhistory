# Second rectangle t right of the first rectangle
bottom_right2 <- gcDestination(lon = lon, lat = lat, bearing = 90, dist = distance_lon*2, dist.units = dist_units, model = "WGS84")
rectangle2 <- cbind(lon = c(bottom_right[1,"long"], bottom_right[1,"long"], bottom_right2[1,"long"], bottom_right2[1,"long"], bottom_right[1,"long"]),
lat=c(lat, topLeft[1,"lat"], topLeft[1,"lat"], lat, lat))
rectangle2 <- data.frame(rectangle2, stringsAsFactors = FALSE)
# Now let's deal with the text
on_top <- gcDestination(lon = lon, lat = lat, bearing = 0, dist = distance_legend, dist.units = dist_units, model = "WGS84")
on_top2 <- on_top3 <- on_top
on_top2[1,"long"] <- bottom_right[1,"long"]
on_top3[1,"long"] <- bottom_right2[1,"long"]
legend <- rbind(on_top, on_top2, on_top3)
legend <- data.frame(cbind(legend, text = c(0, distance_lon, distance_lon*2)), stringsAsFactors = FALSE, row.names = NULL)
return(list(rectangle = rectangle, rectangle2 = rectangle2, legend = legend))
}
create_orientation_arrow <- function(scale_bar, length, distance = 1, dist_units = "km"){
lon <- scale_bar$rectangle2[1,1]
lat <- scale_bar$rectangle2[1,2]
# Bottom point of the arrow
beg_point <- gcDestination(lon = lon, lat = lat, bearing = 0, dist = distance, dist.units = dist_units, model = "WGS84")
lon <- beg_point[1,"long"]
lat <- beg_point[1,"lat"]
# Let us create the endpoint
on_top <- gcDestination(lon = lon, lat = lat, bearing = 0, dist = length, dist.units = dist_units, model = "WGS84")
left_arrow <- gcDestination(lon = on_top[1,"long"], lat = on_top[1,"lat"], bearing = 225, dist = length/5, dist.units = dist_units, model = "WGS84")
right_arrow <- gcDestination(lon = on_top[1,"long"], lat = on_top[1,"lat"], bearing = 135, dist = length/5, dist.units = dist_units, model = "WGS84")
res <- rbind(
cbind(x = lon, y = lat, xend = on_top[1,"long"], yend = on_top[1,"lat"]),
cbind(x = left_arrow[1,"long"], y = left_arrow[1,"lat"], xend = on_top[1,"long"], yend = on_top[1,"lat"]),
cbind(x = right_arrow[1,"long"], y = right_arrow[1,"lat"], xend = on_top[1,"long"], yend = on_top[1,"lat"]))
res <- as.data.frame(res, stringsAsFactors = FALSE)
# Coordinates from which "N" will be plotted
coords_n <- cbind(x = lon, y = (lat + on_top[1,"lat"])/2)
return(list(res = res, coords_n = coords_n))
}
scale_bar <- function(lon, lat, distance_lon, distance_lat, distance_legend, dist_unit = "km", rec_fill = "white", rec_colour = "black", rec2_fill = "black", rec2_colour = "black", legend_colour = "black", legend_size = 3, orientation = TRUE, arrow_length = 500, arrow_distance = 300, arrow_north_size = 6){
the_scale_bar <- create_scale_bar(lon = lon, lat = lat, distance_lon = distance_lon, distance_lat = distance_lat, distance_legend = distance_legend, dist_unit = dist_unit)
# First rectangle
rectangle1 <- geom_polygon(data = the_scale_bar$rectangle, aes(x = lon, y = lat), fill = rec_fill, colour = rec_colour)
# Second rectangle
rectangle2 <- geom_polygon(data = the_scale_bar$rectangle2, aes(x = lon, y = lat), fill = rec2_fill, colour = rec2_colour)
# Legend
scale_bar_legend <- annotate("text", label = paste(the_scale_bar$legend[,"text"], dist_unit, sep=""), x = the_scale_bar$legend[,"long"], y = the_scale_bar$legend[,"lat"], size = legend_size, colour = legend_colour)
res <- list(rectangle1, rectangle2, scale_bar_legend)
if(orientation){# Add an arrow pointing North
coords_arrow <- create_orientation_arrow(scale_bar = the_scale_bar, length = arrow_length, distance = arrow_distance, dist_unit = dist_unit)
arrow <- list(geom_segment(data = coords_arrow$res, aes(x = x, y = y, xend = xend, yend = yend)), annotate("text", label = "N", x = coords_arrow$coords_n[1,"x"], y = coords_arrow$coords_n[1,"y"], size = arrow_north_size, colour = "black"))
res <- c(res, arrow)
}
return(res)
}
#based on n stems in each plot
datd <- dat %>% group_by(long, lat, plotID, year) %>% summarize(n=n()) %>% filter(n == max(n))
no<-map_data("world", region="Norway(?!:Svalbard)")
gg <- ggplot()
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white", size=0.5)
gg <- gg + geom_point(data=datd, aes(x=long, y=lat), color='black', alpha=1/5) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Times New Roman'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg + theme(panel.grid.minor = element_line(colour = NA), panel.grid.major = element_line(colour = NA),
panel.background = element_rect(fill = NA, colour = NA), axis.text.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(), axis.title = element_blank(),
rect = element_blank(),
plot.margin = unit(0 * c(-1.5, -1.5, -1.5, -1.5), "lines"))
#based on n stems in each plot
datd <- dat %>% group_by(long, lat, plotID, year) %>% summarize(n=n()) %>% filter(n == max(n))
no<-map_data("world", region="Norway(?!:Svalbard)")
gg <- ggplot()
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="lightgrey", size=0.3)
#based on n stems in each plot
datd <- dat %>% group_by(long, lat, plotID) %>% filter(year == max(year)) %>% summarize(n=n())
?n
#based on n stems in each plot
datd <- dat %>% group_by(long, lat, plotID) %>% filter(year == max(year)) %>% summarize(n())
#based on n stems in each plot
datd <- dat %>% group_by(long, lat, plotID) %>% filter(year == max(year)) %>% summarize(n=n)
head(datd)
detach("package:plyr", unload=TRUE)
#based on n stems in each plot
datd <- dat %>% group_by(long, lat, plotID) %>% filter(year == max(year)) %>% summarize(n=n())
no<-map_data("world", region="Norway(?!:Svalbard)")
gg <- ggplot()
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white", size=0.5)
gg <- gg + geom_point(data=datd, aes(x=long, y=lat), color='black', alpha=1/5) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- gg + geom_point(data=datd, aes(x=long, y=lat), color='black', size=n, alpha=1/5) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
head(datd)
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white", size=n)
gg <- gg + geom_point(data=datd, aes(x=long, y=lat), color='black', alpha=1/5) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
#based on n stems in each plot
datd <- dat %>% group_by(long, lat, plotID) %>% filter(year == max(year)) %>% summarize(stems=n())
no<-map_data("world", region="Norway(?!:Svalbard)")
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white", size=stems)
gg <- gg + geom_point(data=datd, aes(x=long, y=lat), color='black', alpha=1/5) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- gg + geom_map(data=no, map=no, aes(map_id=region, size=stems), color="darkgrey", fill="white")
gg <- gg + geom_point(data=datd, aes(x=long, y=lat), color='black', alpha=1/5) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white")
gg <- gg + geom_point(data=datd, aes(x=long, y=lat, size=stems), color='black', alpha=1/5) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
head(datd_
)
head(datd)
gg <- ggplot()
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white")
gg <- gg + geom_point(data=datd, aes(x=long, y=lat, size=stems), color='black', alpha=1/5) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- ggplot()
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white")
gg <- gg + geom_point(data=datd, aes(x=long, y=lat, size=stems/10), color='black', alpha=1/5) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- gg + geom_point(data=datd, aes(x=long, y=lat, size=stems/10), color='black', alpha=1) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- gg + geom_point(data=datd, aes(x=long, y=lat, size=stems/100), color='black', alpha=1/5) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white")
gg <- gg + geom_point(data=datd, aes(x=long, y=lat, size=stems/100), color='black', alpha=1/5) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- ggplot()
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white")
gg <- gg + geom_point(data=datd, aes(x=long, y=lat, size=stems/100), color='black', alpha=1/5) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg + theme(panel.grid.minor = element_line(colour = NA), panel.grid.major = element_line(colour = NA),
panel.background = element_rect(fill = NA, colour = NA), axis.text.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(), axis.title = element_blank(),
rect = element_blank(),
plot.margin = unit(0 * c(-1.5, -1.5, -1.5, -1.5), "lines"))
gg <- ggplot()
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white")
gg <- gg + geom_point(data=datd, aes(x=long, y=lat, size=stems/100), color='black', alpha=0.25) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- ggplot()
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white")
gg <- gg + geom_point(data=datd, aes(x=long, y=lat, size=stems/1000), color='black', alpha=0.25) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- ggplot()
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white")
gg <- gg + geom_point(data=datd, aes(x=long, y=lat, size=stems/1000), color='black', alpha=0.25) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude") + stat_binhex()
gg
gg <- gg +
gg <- gg + coord_equal() + theme_bw() + theme(legend.position="none") +
gg <- gg + coord_equal() + theme_bw() + theme(legend.position="none") +
gg <- ggplot()
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white")
gg <- gg + coord_equal() + theme_bw() + theme(legend.position="none") +
gg <- gg + stat_binhex(data=datd, aes(x=long, y=lat, size=stems/1000) +
gg <- gg + stat_binhex(data=datd, aes(x=long, y=lat, size=stems/1000)) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- gg + geom_bin2d(data=datd, aes(x=long, y=lat, size=stems/1000)) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- gg + stat_binhex(data=datd, aes(x=long, y=lat, size=stems/1000)) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- gg + stat_binhex(data=datd, aes(x=long, y=lat, size=stems/1000), color=greyscale) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg <- gg + stat_binhex(data=datd, aes(x=long, y=lat, size=stems/1000), color=grey) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
?stat_binhex
gg <- gg + stat_binhex(data=datd, aes(x=long, y=lat, size=stems/1000), fill=stems, bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- gg + stat_binhex(data=datd, aes(x=long, y=lat, fill=stems), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- gg + stat_binhex(data=datd, aes(x=long, y=lat), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg <- gg + stat_binhex(data=datd, aes(x=long, y=lat), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg <- gg + stat_binhex(data=datd, aes(x=long, y=lat), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- ggplot()
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white")
gg <- gg + stat_binhex(data=datd, aes(x=long, y=lat), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- gg + stat_binhex(data=datd, aes(x=long, y=lat), fill=stems, bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")
gg
gg <- gg + stat_binhex(data=datd, aes(x=long, y=lat), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")+
scale_fill_gradient(low = "white", high = "black")
gg
gg <- gg + stat_binhex(data=datd, aes(x=long, y=lat), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")+
scale_fill_gradient(low = "grey", high = "black")
gg
gg <- gg + geom_hex(data=datd, aes(x=long, y=lat, fill=stem), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")+
scale_fill_gradient(low = "grey", high = "black")
gg
gg <- ggplot()
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white")
gg <- gg + geom_hex(data=datd, aes(x=long, y=lat, fill=stem), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")+
scale_fill_gradient(low = "grey", high = "black")
gg
head(datd)
gg <- gg + geom_hex(data=datd, aes(x=long, y=lat, fill=stems), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")+
scale_fill_gradient(low = "grey", high = "black")
gg
gg <- ggplot()
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white")
gg <- gg + geom_hex(data=datd, aes(x=long, y=lat, fill=stems), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")+
scale_fill_gradient(low = "grey", high = "black")
gg
gg <- gg + geom_hex(stat="identitiy", data=datd, aes(x=long, y=lat, fill=stems), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")+
scale_fill_gradient(low = "grey", high = "black")
gg
gg <- gg + geom_hex(stat="identity", data=datd, aes(x=long, y=lat, fill=stems), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")+
scale_fill_gradient(low = "grey", high = "black")
gg
?geom_hex
ggmap(no, extent = "device", base_layer = ggplot(datd, aes(x=long, y=lat, col=stems))) + coord_cartesian() + geom_hex(stat="binhex")
install.packages(ggmap)
install.packages('ggmap')
ggmap(no, extent = "device", base_layer = ggplot(datd, aes(x=long, y=lat, col=stems))) + coord_cartesian() + geom_hex(stat="binhex")
library(ggmap)
ggmap(no, extent = "device", base_layer = ggplot(datd, aes(x=long, y=lat, col=stems))) + coord_cartesian() + geom_hex(stat="binhex")
gg <- gg + ggplot(data=datd, aes(x=long, y=lat, fill=stems), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude") + geom_hex(stat="binhex") +
scale_fill_gradient(low = "grey", high = "black")
gg <- gg + ggplot(data=datd, aes(x=long, y=lat, col=stems), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude") + geom_hex(stat="binhex") +
scale_fill_gradient(low = "grey", high = "black")
gg <- gg + geom_hex(stat="identity", data=datd, aes(x=long, y=lat, fill=stems), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")+ geom_hex(stat="binhex")
scale_fill_gradient(low = "grey", high = "black")
gg <- gg + geom_hex(stat="identity", data=datd, aes(x=long, y=lat, fill=stems), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")+ geom_hex(stat="binhex")
scale_fill_gradient(low = "grey", high = "black")
gg <- gg + geom_hex(stat="identity", data=datd, aes(x=long, y=lat, fill=stems), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")+ geom_hex(stat="binhex") +
scale_fill_gradient(low = "grey", high = "black")
gg
no<-map_data("world", region="Norway(?!:Svalbard)")
gg <- ggplot()
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white")
gg <- gg + geom_hex(stat="binhex", data=datd, aes(x=long, y=lat, fill=stems), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")+
scale_fill_gradient(low = "grey", high = "black")
gg
gg <- gg + geom_hex(stat="binhex", data=datd, aes(x=long, y=lat, col=stems), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")+
scale_fill_gradient(low = "grey", high = "black")
gg
ggsave('~/Dropbox/Projects/Norway Forests/nfi/manuscript/Feb2018/Fig1.pdf', height=6,width=7,dpi=400)
ggsave('~/Dropbox/Projects/Norway Forests/nfi/manuscript/Feb2018/Fig1.pdf', height=6,width=8,dpi=400)
datd <- dat %>% group_by(long, lat, plotID) %>% filter(year == max(year)) %>% summarize(stems=n())
no<-map_data("world", region="Norway(?!:Svalbard)")
gg <- ggplot()
gg <- gg + geom_map(data=no, map=no, aes(map_id=region), color="darkgrey", fill="white")
gg <- gg + geom_hex(stat="binhex", data=datd, aes(x=long, y=lat, col=stems), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")+
scale_fill_gradient(low = "grey", high = "black")
gg
ggsave('~/Dropbox/Projects/Norway Forests/nfi/manuscript/Feb2018/Fig1.pdf', height=6,width=8,dpi=400)
gg <- gg + geom_hex(stat="binhex", data=datd, aes(x=long, y=lat, col=stems), bins=50) +
coord_equal() + theme_bw() + theme(legend.position="none") +
scale_bar(lon = 20, lat = 59,
distance_lon = 50, distance_lat = 10,
distance_legend = 50, dist_unit = "km", orientation = FALSE) +
theme(text = element_text(family = 'Helvetica'), strip.background = element_blank(), legend.position = 'none') +
xlab("Longitude") + ylab("Latitude")+
scale_fill_gradient(low = "grey", high = "black")
gg
